cmake_minimum_required (VERSION 2.6)
project (Radiation-Control)


#######################################################################
#CROSS-COMPILER=arm-linux-gnueabihf-
#AOCL_COMPILE_CONFIG=$(shell aocl compile-config --arm)
#AOCL_LINK_CONFIG=$(shell aocl link-config --arm)
#
#host_prog : host_prog.o
#	$(CROSS-COMPILER)g++ -o host_prog host_prog.o $(AOCL_LINK_CONFIG)
#
#	host_prog.o : host_prog.cpp
#		$(CROSS-COMPILER)g++ -c host_prog.cpp $(AOCL_COMPILE_CONFIG)
#######################################################################

set (OPENCL_LIBS "/home/elajs/altera/16.0/hld/linux64/lib")
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")

set (PROJECT_SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)
set (CMAKE_BUILD_DIRECTORY ${CMAKE_SOURCE_DIR}/build)
set (CMAKE_BUILD_FILES_DIRECTORY ${CMAKE_SOURCE_DIR}/build)
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set (INCLUDE_DIRECTORIES ${PROJECT_SOURCE_DIR}/inc)

file(GLOB_RECURSE SOURCE_FILES
	"${PROJECT_SOURCE_DIR}/*.cpp"
	"${INCLUDE_DIRECTORIES}/*.h"
)

install(DIRECTORY DESTINATION ${BUILD_OUTPUT_PATH})
install(DIRECTORY DESTINATION ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

# add the OpenCL libraries
find_library(OPENCL OpenCL)
#link_directories(${OPENCL_LIBS})

add_executable(Radiation-Control ${SOURCE_FILES})

#set_target_properties(libOpenCL PROPERTIES IMPORTED_LOCATION ${OPENCL_LIBS}/libOpenCL.so)

target_link_libraries(Radiation-Control "${OPENCL}")

include_directories(${INCLUDE_DIRECTORIES})                                                                   

